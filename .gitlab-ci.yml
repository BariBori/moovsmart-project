Build Backend:
  stage: build
  script:
    - mvn package -DskipTests=true -q
  artifacts:
    paths:
      - target/prevmed-0.0.1-SNAPSHOT.jar
  only:
    - deployment

Build Frontend:
  stage: build
  image: node:10
  cache:
    paths:
      - moovsmart/node_modules/
  script:
    - cd moovsmart
    - npm ci
    - npm run build --quiet
  artifacts:
    paths:
      - moovsmart/build/
  only:
    - master

# Deploy to Test:
#   stage: deploy_test
#   script:
#     - scp -i "$TEST_SERVER_SSH_PRIVATE_KEY" target/prevmed-0.0.1-SNAPSHOT.jar $TEST_SERVER_USER@$TEST_SERVER_IP:/home/ubuntu/prevmed-0.0.1-SNAPSHOT.jar.TEMP
#     - scp -i "$TEST_SERVER_SSH_PRIVATE_KEY" -r frontend/build/ $TEST_SERVER_USER@$TEST_SERVER_IP:/root/prevmed-test.progmasters.hu.temp
#     - ssh -i "$TEST_SERVER_SSH_PRIVATE_KEY" $TEST_SERVER_USER@$TEST_SERVER_IP 'sudo ./deploy.sh'
#   only:
#     - deployment

Wait for approval:
  stage: wait_for_approval
  script:
    - echo "Waiting for approval..."
  when: manual
  allow_failure: false

Deploy to Production:
  stage: deploy_production
  script:
    # - scp -i "$PROD_SERVER_SSH_PRIVATE_KEY" target/prevmed-0.0.1-SNAPSHOT.jar $PROD_SERVER_USER@$PROD_SERVER_IP:/home/ubuntu/prevmed-0.0.1-SNAPSHOT.jar.TEMP
    # - scp -i "$PROD_SERVER_SSH_PRIVATE_KEY" -r frontend/build/ $PROD_SERVER_USER@$PROD_SERVER_IP:/home/ubuntu/prevmed.temp
    # - ssh -i "$PROD_SERVER_SSH_PRIVATE_KEY" $PROD_SERVER_USER@$PROD_SERVER_IP 'sudo ./deploy.sh'
    scp  -i $pem_file_full_path $frontend_source_location ec2-user@$remote_address:$frontend_remote_location
    scp  -i $pem_file_full_path $backend_source_location ec2-user@$remote_address:$backend_remote_location/project-1.0-SNAPSHOT.jar.new
    ssh -i $pem_file_full_path ec2-user@$remote_address './shutdown.sh; mv project-1.0-SNAPSHOT.jar.new project.jar; ./start.sh'
  only:
    - deployment