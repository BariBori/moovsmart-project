stages:
  - init
  - test
  - package
  # - deploy

variables:
    # needed for Docker-In-Docker
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay
    # project's gitlab ci registry
    MOOVSMART_REGISTRY: $CI_REGISTRY/fort.zsuzsanna/angular-moovsmart

# before_script:
#   - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
#   - eval $(ssh-agent -s)
#   - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
#   - mkdir -p ~/.ssh
#   - chmod 777 ~/.ssh
#   - ssh-keyscan $remote_address >> ~/.ssh/known_hosts
#   - chmod 644 ~/.ssh/known_hosts

# setup:
#   image: docker:18
#   services:
#     # enable calling docker from within docker image
#     - docker:18-dind   
#   stage: init
#   script:
#     # make pushing and pulling possible
#     - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
#     # pull latest BE env to use as cache
#     - docker pull $MOOVSMART_REGISTRY/backend-stage:latest
#     # verify / update BE env
#     - > 
#         docker build
#         --cache-from $MOOVSMART_REGISTRY/backend-stage:latest
#         --rm
#         --tag $MOOVSMART_REGISTRY/backend-stage:latest 
#         -f base.dockerfile
#         .
#     # push BE env
#     - docker push $MOOVSMART_REGISTRY/backend-stage:latest    

#     # pull latest FE env to use as cache
#     - docker pull $MOOVSMART_REGISTRY/frontend-stage:latest
#     # verify / update FE env
#     - > 
#         docker build
#         --cache-from $MOOVSMART_REGISTRY/frontend-stage:latest
#         --rm
#         --tag $MOOVSMART_REGISTRY/frontend-stage:latest 
#         -f moovsmart/base.dockerfile
#         moovsmart
#     # push FE env
#     - docker push $MOOVSMART_REGISTRY/frontend-stage:latest    



# Build Backend:
#   image: maven:3.6.3
#   stage: build
#   script:
#     - mvn package -DskipTests=true -q
#   artifacts:
#     paths:
#       - target/project-1.0-SNAPSHOT.jar
#   only:
#     - master
#   tags:
#     - java

# Build Frontend:
#   stage: build
#   cache:
#     paths:
#       - moovsmart/node_modules/
#   script:
#     - cd moovsmart
#     - npm ci
#     - npm run build --quiet
#   artifacts:
#     paths:
#       - moovsmart/dist/moovsmart
#   only:
#     - master
#   tags:
#     - node

# BE mvn test:
#   # use BE env image build in init stage
#   image: $MOOVSMART_REGISTRY/backend-stage:latest
#   stage: test
#   script:
#     # run tests as well
#     - mvn package
#   # cache jar for deploy stage  
#   artifacts:
#     paths:
#       - target/project-1.0-SNAPSHOT.jar
#   tags:
#     - test

FE karma test:
  # FE env image build in init stage
  image: $MOOVSMART_REGISTRY/frontend-stage:latest
  stage: test
  script:
    # copy FE folder to where node_modules are installed
    - cp -a moovsmart/. /frontend/
    - cd /frontent
    # actual business
    - npm run-script build
    # - npm test
    # move compiled files to where the runner sees them
    - mv /frontend/dist /builds/fort.zsuzsanna/angular-moovsmart/
  # cache build results for deploy stage 
  artifacts:
    paths:
      - dist/moovsmart/
  tags:
    - test


# deploy:
#   stage: deploy
#   script:
#     - scp -r moovsmart/dist/moovsmart "$server_user"@"$remote_address:/home/ec2-user/frontend"
#     - scp target/project-1.0-SNAPSHOT.jar "$server_user"@$remote_address:/home/ec2-user/project-1.0-SNAPSHOT.jar.new
#     - ssh "$server_user"@"$remote_address" './shutdown.sh && mv project-1.0-SNAPSHOT.jar.new project.jar && ./start.sh'

#   only:
#     - master
