stages:
  - pre-compile
  - compile
  - test
  - deploy

variables:
  # needed for Docker-In-Docker
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay
  # project's gitlab ci registry
  MOOVSMART_REGISTRY: $CI_REGISTRY/fort.zsuzsanna/angular-moovsmart
  FRONTEND_HOST: 127.0.0.1
  FRONTEND_USER: $server_user
  BACKEND_HOST: 127.0.0.1
  BACKEND_USER: $server_user

default:
  image: docker:18
  services:
    - docker:18-dind   

Create BE compile image:
  stage: pre-compile
  script:
    # make pushing and pulling possible
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    # pull latest BE env to use as cache
    - docker pull $MOOVSMART_REGISTRY/backend-compiler:latest
    # verify / update BE env
    - > 
        docker build
        --cache-from $MOOVSMART_REGISTRY/backend-compiler:latest
        --rm
        --tag $MOOVSMART_REGISTRY/backend-compiler:latest 
        -f compiler.dockerfile
        .
    # push BE env
    - docker push $MOOVSMART_REGISTRY/backend-compiler:latest    
  only:
    changes:
      - pom.xml


Create FE compile and test images:
  stage: pre-compile
  script:
    # make pushing and pulling possible
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    # update FE compile and test images
    - > 
        docker build
        --rm
        --tag $MOOVSMART_REGISTRY/frontend-compile:latest 
        -f moovsmart/compile.dockerfile
        moovsmart
    - > 
        docker build
        --rm
        --tag $MOOVSMART_REGISTRY/frontend-test:latest 
        -f moovsmart/test.dockerfile
        moovsmart

    # push images
    - docker push $MOOVSMART_REGISTRY/frontend-compile:latest    
    - docker push $MOOVSMART_REGISTRY/frontend-test:latest    
  only:
    changes:
      - moovsmart/package.json
      - moovsmart/package-lock.json
      

Compile FE:
  stage: compile
  inherit:
    default: false
  image: $MOOVSMART_REGISTRY/frontend-compile:latest
  script:
    # move necessary files to where node_modules are installed
    - cd moovsmart
    - mv angular.json tsconfig.json tsconfig.app.json nginx.conf ci-build.sh src /frontend/
    - cd /frontend
    # actual business
    - npm run-script ci-build
  artifacts:
    paths:
      - moovsmart/dist/moovsmart/

# BE mvn test:
#   stage: test
#   # use BE env image build in init stage
#   image: $MOOVSMART_REGISTRY/backend-compiler:latest
#   script:
#     # run tests as well
#     - mvn package
#   # cache jar for deploy stage  
#   artifacts:
#     paths:
#       - target/project-1.0-SNAPSHOT.jar
#   tags:
#     - test

# FE karma test:
#   # FE env image build in init stage
#   image: $MOOVSMART_REGISTRY/frontend-stage:latest
#   stage: test
#   script:
#     # copy FE folder to where node_modules are installed
#     - cp -a moovsmart/. /frontend/
#     - cd /frontend
#     # actual business
#     - npm run-script build
#     # - npm test
#     # move compiled files to where the runner sees them
#     - mv /frontend/dist $CI_PROJECT_DIR/moovsmart/
#   # cache build results for deploy stage 
#   artifacts:
#     paths:
#       - moovsmart/dist/moovsmart/
#   tags:
#     - test

# Package app:
#   stage: package
#   image: docker:18
#   script:
#     # make pushing and pulling possible
#     - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
#     #build BE prod image
#     - > 
#         docker build
#         --rm
#         --tag $MOOVSMART_REGISTRY/backend-prod:latest 
#         -f prod.dockerfile
#         .
#     # push BE prod image
#     - docker push $MOOVSMART_REGISTRY/backend-prod:latest  
#     #build FE prod image
#     - > 
#         docker build
#         --rm
#         --tag $MOOVSMART_REGISTRY/frontend-prod:latest 
#         -f moovsmart/prod.dockerfile
#         moovsmart
#     # push FE prod image
#     - docker push $MOOVSMART_REGISTRY/frontend-prod:latest  


# Deploy app:
#   stage: deploy
#   image: docker:18
#   services:
#     # enable calling docker from within docker image
#     - docker:18-dind   
#   script:
#     - ssh-add moovsmart.pem
#     # make pushing and pulling possible
#     - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

#     - scp -r moovsmart/dist/moovsmart "$server_user"@"$remote_address:/home/ec2-user/frontend"
#     - scp target/project-1.0-SNAPSHOT.jar "$server_user"@$remote_address:/home/ec2-user/project-1.0-SNAPSHOT.jar.new
#     - ssh "$server_user"@"$remote_address" './shutdown.sh && mv project-1.0-SNAPSHOT.jar.new project.jar && ./start.sh'

#   only:
#     - master
